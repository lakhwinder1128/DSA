int LongestBitonicSequence(vector<int>nums)
	{
	    // code here
	    int n=nums.size();
	    vector<int>dp(nums.size(),1);
	    for(int i=0;i<n;i++){
	        for(int j=0;j<i;j++){
	            if(nums[i]>nums[j]&&dp[j]+1>dp[i]){
	                dp[i]=dp[j]+1;
	            }
	        }
	    }
	    reverse(nums.begin(),nums.end());
	     vector<int>dp2(nums.size(),1);
	    for(int i=0;i<n;i++){
	        for(int j=0;j<i;j++){
	            if(nums[i]>nums[j]&&dp2[j]+1>dp2[i]){
	                dp2[i]=dp2[j]+1;
	            }
	        }
	    }
	    reverse(dp2.begin(),dp2.end());
	    int ans=0;
	    for(int i=0;i<n;i++){
	        ans=max(ans,dp[i]+dp2[i]-1);
	    }
	    return ans;
	}
