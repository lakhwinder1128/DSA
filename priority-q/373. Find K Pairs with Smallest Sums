class Solution {
public:
    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
        int n=nums1.size();
        int m=nums2.size();
       priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>>pq;     // min heap
       vector<vector<int>>ans;
        for(int i=0;i<n;i++){
           pq.push({nums1[i]+nums2[0],{i,0}});
        }
       
        // trick   store in priority_queue   sum, i, j (indexes not elements)
         while(k--&&pq.size()){
           pair<int,int>p=pq.top().second;
           int i=p.first;
           int j=p.second;

           ans.push_back({nums1[i],nums2[j]});
           pq.pop();
           if(j<m-1)  pq.push({nums1[i]+nums2[j+1],{i,j+1}});
           
         }
         return ans;
    }
};
