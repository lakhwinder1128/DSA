vector<int> getOrder(vector<vector<int>>& tasks) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>q;
        int n=tasks.size();
        vector<int>ans;
        for(int i=0;i<tasks.size();i++){
        tasks[i].push_back(i);
        }
        sort(tasks.begin(),tasks.end());
        // arr time  , processing time, index
        long long i=0,t=1;
        t=tasks[i][0];
        while(i<n||q.size()){
           
             while(i<n&&t>=tasks[i][0]){
                 q.push({tasks[i][1],tasks[i][2]});
                 i++;
             }
           
           if(q.size()){
           int ind=q.top().second;
           int pt=q.top().first;
           q.pop();
           
           ans.push_back(ind);
           t=t+pt;
           }
           else if(i<n) t=tasks[i][0];
           
           
        }

        

        return ans;
    }
