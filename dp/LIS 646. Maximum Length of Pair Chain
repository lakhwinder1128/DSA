int findLongestChain(vector<vector<int>>& pairs) {
     int n=pairs.size();
      //lis 
    //   vector<int>dp(n+1,1);
    //   int ans=1;
    //   sort(pairs.begin(),pairs.end());
    //   for(int i=0;i<n;i++){
    //       for(int prev=0;prev<i;prev++){
    //           if(pairs[i][0]>pairs[prev][1]&&(dp[i]<dp[prev]+1)){
    //               dp[i]=dp[prev]+1;
    //           }
    //       }
    //    ans=max(ans,dp[i]);
    //   } 
    //   return ans;

    //binary search O(nlogn)
 sort(pairs.begin(),pairs.end());
 for(int i=0;i<n;i++){
     cout<<pairs[i][0]<<" "<<pairs[i][1]<<endl;
 }
    vector<int>lis;
    lis.push_back(pairs[0][1]);      //because iske saath hi compare karenge next pairs[i][0] ko
    for(int i=1;i<n;i++){
        if(lis.back()<pairs[i][0])lis.push_back(pairs[i][1]);
        else if(lis.back()>pairs[i][0]){
            int ind=lower_bound(lis.begin(),lis.end(),pairs[i][0])-lis.begin();
            lis[ind]=min(lis[ind],pairs[i][1]);
        }
    }
    return lis.size();
    }
