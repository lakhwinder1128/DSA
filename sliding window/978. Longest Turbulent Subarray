 int maxTurbulenceSize(vector<int>& arr) {
         int n=arr.size();
        int i=n-1,j=n-1;
        int len=1;
       // int comp=arr[0];
       
        while(j>=0){
          if(j<i){
            if(j%2!=0&&arr[j]>arr[j+1])len=max(len,i-j+1);
            else if(j%2==0&&arr[j]<arr[j+1])len=max(len,i-j+1);
            else {
             //   cout<<j<<" "<<i<<endl;
                i=j;

            }
          }
          j--;
        }

           i=n-1,j=n-1;
         while(j>=0){
          if(j<i){
            if(j%2==0&&arr[j]>arr[j+1])len=max(len,i-j+1);
            else if(j%2!=0&&arr[j]<arr[j+1])len=max(len,i-j+1);
            else {
               // cout<<j<<" "<<i<<endl;
                i=j;

            }
          }
          j--;
        }



        return len;
    }
